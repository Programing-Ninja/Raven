// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: message_type.proto
// Protobuf C++ Version: 5.28.0

#ifndef GOOGLE_PROTOBUF_INCLUDED_message_5ftype_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_message_5ftype_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5028000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_message_5ftype_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_message_5ftype_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_message_5ftype_2eproto;
namespace protobuf_messages {
class MessageHeader;
struct MessageHeaderDefaultTypeInternal;
extern MessageHeaderDefaultTypeInternal _MessageHeader_default_instance_;
}  // namespace protobuf_messages
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace protobuf_messages {
enum MoQtMessageType : int {
  OBJECT_STREAM = 0,
  OBJECT_DATAGRAM = 1,
  SUBSCRIBE_UPDATE = 2,
  SUBSCRIBE = 3,
  SUBSCRIBE_OK = 4,
  SUBSCRIBE_ERROR = 5,
  ANNOUNCE = 6,
  ANNOUNCE_OK = 7,
  ANNOUNCE_ERROR = 8,
  UNANNOUNCE = 9,
  UNSUBSCRIBE = 10,
  SUBSCRIBE_DONE = 11,
  ANNOUNCE_CANCEL = 12,
  TRACK_STATUS_REQUEST = 13,
  TRACK_STATUS = 14,
  GOAWAY = 16,
  CLIENT_SETUP = 64,
  SERVER_SETUP = 65,
  STREAM_HEADER_TRACK = 80,
  STREAM_HEADER_GROUP = 81,
  MoQtMessageType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  MoQtMessageType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool MoQtMessageType_IsValid(int value);
extern const uint32_t MoQtMessageType_internal_data_[];
constexpr MoQtMessageType MoQtMessageType_MIN = static_cast<MoQtMessageType>(0);
constexpr MoQtMessageType MoQtMessageType_MAX = static_cast<MoQtMessageType>(81);
constexpr int MoQtMessageType_ARRAYSIZE = 81 + 1;
const ::google::protobuf::EnumDescriptor*
MoQtMessageType_descriptor();
template <typename T>
const std::string& MoQtMessageType_Name(T value) {
  static_assert(std::is_same<T, MoQtMessageType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to MoQtMessageType_Name().");
  return ::google::protobuf::internal::NameOfEnum(MoQtMessageType_descriptor(), value);
}
inline bool MoQtMessageType_Parse(absl::string_view name, MoQtMessageType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MoQtMessageType>(
      MoQtMessageType_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class MessageHeader final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:protobuf_messages.MessageHeader) */ {
 public:
  inline MessageHeader() : MessageHeader(nullptr) {}
  ~MessageHeader() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MessageHeader(
      ::google::protobuf::internal::ConstantInitialized);

  inline MessageHeader(const MessageHeader& from) : MessageHeader(nullptr, from) {}
  inline MessageHeader(MessageHeader&& from) noexcept
      : MessageHeader(nullptr, std::move(from)) {}
  inline MessageHeader& operator=(const MessageHeader& from) {
    CopyFrom(from);
    return *this;
  }
  inline MessageHeader& operator=(MessageHeader&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MessageHeader& default_instance() {
    return *internal_default_instance();
  }
  static inline const MessageHeader* internal_default_instance() {
    return reinterpret_cast<const MessageHeader*>(
        &_MessageHeader_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(MessageHeader& a, MessageHeader& b) { a.Swap(&b); }
  inline void Swap(MessageHeader* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MessageHeader* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MessageHeader* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<MessageHeader>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MessageHeader& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MessageHeader& from) { MessageHeader::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(MessageHeader* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "protobuf_messages.MessageHeader"; }

 protected:
  explicit MessageHeader(::google::protobuf::Arena* arena);
  MessageHeader(::google::protobuf::Arena* arena, const MessageHeader& from);
  MessageHeader(::google::protobuf::Arena* arena, MessageHeader&& from) noexcept
      : MessageHeader(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMessageTypeFieldNumber = 1,
  };
  // .protobuf_messages.MoQtMessageType messageType = 1;
  void clear_messagetype() ;
  ::protobuf_messages::MoQtMessageType messagetype() const;
  void set_messagetype(::protobuf_messages::MoQtMessageType value);

  private:
  ::protobuf_messages::MoQtMessageType _internal_messagetype() const;
  void _internal_set_messagetype(::protobuf_messages::MoQtMessageType value);

  public:
  // @@protoc_insertion_point(class_scope:protobuf_messages.MessageHeader)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_MessageHeader_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MessageHeader& from_msg);
    int messagetype_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_message_5ftype_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// MessageHeader

// .protobuf_messages.MoQtMessageType messageType = 1;
inline void MessageHeader::clear_messagetype() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.messagetype_ = 0;
}
inline ::protobuf_messages::MoQtMessageType MessageHeader::messagetype() const {
  // @@protoc_insertion_point(field_get:protobuf_messages.MessageHeader.messageType)
  return _internal_messagetype();
}
inline void MessageHeader::set_messagetype(::protobuf_messages::MoQtMessageType value) {
  _internal_set_messagetype(value);
  // @@protoc_insertion_point(field_set:protobuf_messages.MessageHeader.messageType)
}
inline ::protobuf_messages::MoQtMessageType MessageHeader::_internal_messagetype() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::protobuf_messages::MoQtMessageType>(_impl_.messagetype_);
}
inline void MessageHeader::_internal_set_messagetype(::protobuf_messages::MoQtMessageType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.messagetype_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace protobuf_messages


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::protobuf_messages::MoQtMessageType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::protobuf_messages::MoQtMessageType>() {
  return ::protobuf_messages::MoQtMessageType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_message_5ftype_2eproto_2epb_2eh
