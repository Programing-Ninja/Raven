// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: subscribe_messages.proto
// Protobuf C++ Version: 5.28.0

#ifndef GOOGLE_PROTOBUF_INCLUDED_subscribe_5fmessages_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_subscribe_5fmessages_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5028000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_subscribe_5fmessages_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_subscribe_5fmessages_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_subscribe_5fmessages_2eproto;
namespace protobuf_messages {
class SubscribeDoneMessage;
struct SubscribeDoneMessageDefaultTypeInternal;
extern SubscribeDoneMessageDefaultTypeInternal _SubscribeDoneMessage_default_instance_;
class SubscribeErrorMessage;
struct SubscribeErrorMessageDefaultTypeInternal;
extern SubscribeErrorMessageDefaultTypeInternal _SubscribeErrorMessage_default_instance_;
class SubscribeMessage;
struct SubscribeMessageDefaultTypeInternal;
extern SubscribeMessageDefaultTypeInternal _SubscribeMessage_default_instance_;
class SubscribeOkMessage;
struct SubscribeOkMessageDefaultTypeInternal;
extern SubscribeOkMessageDefaultTypeInternal _SubscribeOkMessage_default_instance_;
class SubscribeParameter;
struct SubscribeParameterDefaultTypeInternal;
extern SubscribeParameterDefaultTypeInternal _SubscribeParameter_default_instance_;
class SubscribeUpdateMessage;
struct SubscribeUpdateMessageDefaultTypeInternal;
extern SubscribeUpdateMessageDefaultTypeInternal _SubscribeUpdateMessage_default_instance_;
class UnSubscribeMessage;
struct UnSubscribeMessageDefaultTypeInternal;
extern UnSubscribeMessageDefaultTypeInternal _UnSubscribeMessage_default_instance_;
}  // namespace protobuf_messages
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace protobuf_messages {
enum SubscribeFilter : int {
  SubscribeFilterZero = 0,
  LatestGroup = 1,
  LatestObject = 2,
  AbsoluteStart = 3,
  AbsoluteRange = 4,
  SubscribeFilter_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  SubscribeFilter_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool SubscribeFilter_IsValid(int value);
extern const uint32_t SubscribeFilter_internal_data_[];
constexpr SubscribeFilter SubscribeFilter_MIN = static_cast<SubscribeFilter>(0);
constexpr SubscribeFilter SubscribeFilter_MAX = static_cast<SubscribeFilter>(4);
constexpr int SubscribeFilter_ARRAYSIZE = 4 + 1;
const ::google::protobuf::EnumDescriptor*
SubscribeFilter_descriptor();
template <typename T>
const std::string& SubscribeFilter_Name(T value) {
  static_assert(std::is_same<T, SubscribeFilter>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to SubscribeFilter_Name().");
  return SubscribeFilter_Name(static_cast<SubscribeFilter>(value));
}
template <>
inline const std::string& SubscribeFilter_Name(SubscribeFilter value) {
  return ::google::protobuf::internal::NameOfDenseEnum<SubscribeFilter_descriptor,
                                                 0, 4>(
      static_cast<int>(value));
}
inline bool SubscribeFilter_Parse(absl::string_view name, SubscribeFilter* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SubscribeFilter>(
      SubscribeFilter_descriptor(), name, value);
}
enum ObjectStatus : int {
  Normal = 0,
  ObjectDNE = 1,
  GrpDNE = 2,
  EndOfGroup = 3,
  EndOfTrack = 4,
  ObjectStatus_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  ObjectStatus_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool ObjectStatus_IsValid(int value);
extern const uint32_t ObjectStatus_internal_data_[];
constexpr ObjectStatus ObjectStatus_MIN = static_cast<ObjectStatus>(0);
constexpr ObjectStatus ObjectStatus_MAX = static_cast<ObjectStatus>(4);
constexpr int ObjectStatus_ARRAYSIZE = 4 + 1;
const ::google::protobuf::EnumDescriptor*
ObjectStatus_descriptor();
template <typename T>
const std::string& ObjectStatus_Name(T value) {
  static_assert(std::is_same<T, ObjectStatus>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to ObjectStatus_Name().");
  return ObjectStatus_Name(static_cast<ObjectStatus>(value));
}
template <>
inline const std::string& ObjectStatus_Name(ObjectStatus value) {
  return ::google::protobuf::internal::NameOfDenseEnum<ObjectStatus_descriptor,
                                                 0, 4>(
      static_cast<int>(value));
}
inline bool ObjectStatus_Parse(absl::string_view name, ObjectStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ObjectStatus>(
      ObjectStatus_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class UnSubscribeMessage final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:protobuf_messages.UnSubscribeMessage) */ {
 public:
  inline UnSubscribeMessage() : UnSubscribeMessage(nullptr) {}
  ~UnSubscribeMessage() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UnSubscribeMessage(
      ::google::protobuf::internal::ConstantInitialized);

  inline UnSubscribeMessage(const UnSubscribeMessage& from) : UnSubscribeMessage(nullptr, from) {}
  inline UnSubscribeMessage(UnSubscribeMessage&& from) noexcept
      : UnSubscribeMessage(nullptr, std::move(from)) {}
  inline UnSubscribeMessage& operator=(const UnSubscribeMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline UnSubscribeMessage& operator=(UnSubscribeMessage&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UnSubscribeMessage& default_instance() {
    return *internal_default_instance();
  }
  static inline const UnSubscribeMessage* internal_default_instance() {
    return reinterpret_cast<const UnSubscribeMessage*>(
        &_UnSubscribeMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(UnSubscribeMessage& a, UnSubscribeMessage& b) { a.Swap(&b); }
  inline void Swap(UnSubscribeMessage* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UnSubscribeMessage* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UnSubscribeMessage* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<UnSubscribeMessage>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UnSubscribeMessage& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UnSubscribeMessage& from) { UnSubscribeMessage::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(UnSubscribeMessage* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "protobuf_messages.UnSubscribeMessage"; }

 protected:
  explicit UnSubscribeMessage(::google::protobuf::Arena* arena);
  UnSubscribeMessage(::google::protobuf::Arena* arena, const UnSubscribeMessage& from);
  UnSubscribeMessage(::google::protobuf::Arena* arena, UnSubscribeMessage&& from) noexcept
      : UnSubscribeMessage(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSubscribeIdFieldNumber = 1,
  };
  // uint64 SubscribeId = 1;
  void clear_subscribeid() ;
  ::uint64_t subscribeid() const;
  void set_subscribeid(::uint64_t value);

  private:
  ::uint64_t _internal_subscribeid() const;
  void _internal_set_subscribeid(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:protobuf_messages.UnSubscribeMessage)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_UnSubscribeMessage_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const UnSubscribeMessage& from_msg);
    ::uint64_t subscribeid_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_subscribe_5fmessages_2eproto;
};
// -------------------------------------------------------------------

class SubscribeParameter final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:protobuf_messages.SubscribeParameter) */ {
 public:
  inline SubscribeParameter() : SubscribeParameter(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SubscribeParameter(
      ::google::protobuf::internal::ConstantInitialized);

  inline SubscribeParameter(const SubscribeParameter& from) : SubscribeParameter(nullptr, from) {}
  inline SubscribeParameter(SubscribeParameter&& from) noexcept
      : SubscribeParameter(nullptr, std::move(from)) {}
  inline SubscribeParameter& operator=(const SubscribeParameter& from) {
    CopyFrom(from);
    return *this;
  }
  inline SubscribeParameter& operator=(SubscribeParameter&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SubscribeParameter& default_instance() {
    return *internal_default_instance();
  }
  static inline const SubscribeParameter* internal_default_instance() {
    return reinterpret_cast<const SubscribeParameter*>(
        &_SubscribeParameter_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(SubscribeParameter& a, SubscribeParameter& b) { a.Swap(&b); }
  inline void Swap(SubscribeParameter* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SubscribeParameter* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SubscribeParameter* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<SubscribeParameter>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const SubscribeParameter& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const SubscribeParameter& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "protobuf_messages.SubscribeParameter"; }

 protected:
  explicit SubscribeParameter(::google::protobuf::Arena* arena);
  SubscribeParameter(::google::protobuf::Arena* arena, const SubscribeParameter& from);
  SubscribeParameter(::google::protobuf::Arena* arena, SubscribeParameter&& from) noexcept
      : SubscribeParameter(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::internal::ZeroFieldsBase::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:protobuf_messages.SubscribeParameter)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SubscribeParameter_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SubscribeParameter& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_subscribe_5fmessages_2eproto;
};
// -------------------------------------------------------------------

class SubscribeOkMessage final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:protobuf_messages.SubscribeOkMessage) */ {
 public:
  inline SubscribeOkMessage() : SubscribeOkMessage(nullptr) {}
  ~SubscribeOkMessage() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SubscribeOkMessage(
      ::google::protobuf::internal::ConstantInitialized);

  inline SubscribeOkMessage(const SubscribeOkMessage& from) : SubscribeOkMessage(nullptr, from) {}
  inline SubscribeOkMessage(SubscribeOkMessage&& from) noexcept
      : SubscribeOkMessage(nullptr, std::move(from)) {}
  inline SubscribeOkMessage& operator=(const SubscribeOkMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline SubscribeOkMessage& operator=(SubscribeOkMessage&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SubscribeOkMessage& default_instance() {
    return *internal_default_instance();
  }
  static inline const SubscribeOkMessage* internal_default_instance() {
    return reinterpret_cast<const SubscribeOkMessage*>(
        &_SubscribeOkMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(SubscribeOkMessage& a, SubscribeOkMessage& b) { a.Swap(&b); }
  inline void Swap(SubscribeOkMessage* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SubscribeOkMessage* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SubscribeOkMessage* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SubscribeOkMessage>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SubscribeOkMessage& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SubscribeOkMessage& from) { SubscribeOkMessage::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SubscribeOkMessage* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "protobuf_messages.SubscribeOkMessage"; }

 protected:
  explicit SubscribeOkMessage(::google::protobuf::Arena* arena);
  SubscribeOkMessage(::google::protobuf::Arena* arena, const SubscribeOkMessage& from);
  SubscribeOkMessage(::google::protobuf::Arena* arena, SubscribeOkMessage&& from) noexcept
      : SubscribeOkMessage(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSubscribeIdFieldNumber = 1,
    kExpiresFieldNumber = 2,
    kGroupOrderFieldNumber = 3,
    kContentExistsFieldNumber = 4,
    kLargestGroupIdFieldNumber = 5,
    kLargestObjectIdFieldNumber = 6,
  };
  // uint64 SubscribeId = 1;
  void clear_subscribeid() ;
  ::uint64_t subscribeid() const;
  void set_subscribeid(::uint64_t value);

  private:
  ::uint64_t _internal_subscribeid() const;
  void _internal_set_subscribeid(::uint64_t value);

  public:
  // uint64 Expires = 2;
  void clear_expires() ;
  ::uint64_t expires() const;
  void set_expires(::uint64_t value);

  private:
  ::uint64_t _internal_expires() const;
  void _internal_set_expires(::uint64_t value);

  public:
  // uint32 GroupOrder = 3;
  void clear_grouporder() ;
  ::uint32_t grouporder() const;
  void set_grouporder(::uint32_t value);

  private:
  ::uint32_t _internal_grouporder() const;
  void _internal_set_grouporder(::uint32_t value);

  public:
  // bool ContentExists = 4;
  void clear_contentexists() ;
  bool contentexists() const;
  void set_contentexists(bool value);

  private:
  bool _internal_contentexists() const;
  void _internal_set_contentexists(bool value);

  public:
  // optional uint64 LargestGroupId = 5;
  bool has_largestgroupid() const;
  void clear_largestgroupid() ;
  ::uint64_t largestgroupid() const;
  void set_largestgroupid(::uint64_t value);

  private:
  ::uint64_t _internal_largestgroupid() const;
  void _internal_set_largestgroupid(::uint64_t value);

  public:
  // optional uint64 LargestObjectId = 6;
  bool has_largestobjectid() const;
  void clear_largestobjectid() ;
  ::uint64_t largestobjectid() const;
  void set_largestobjectid(::uint64_t value);

  private:
  ::uint64_t _internal_largestobjectid() const;
  void _internal_set_largestobjectid(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:protobuf_messages.SubscribeOkMessage)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SubscribeOkMessage_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SubscribeOkMessage& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint64_t subscribeid_;
    ::uint64_t expires_;
    ::uint32_t grouporder_;
    bool contentexists_;
    ::uint64_t largestgroupid_;
    ::uint64_t largestobjectid_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_subscribe_5fmessages_2eproto;
};
// -------------------------------------------------------------------

class SubscribeErrorMessage final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:protobuf_messages.SubscribeErrorMessage) */ {
 public:
  inline SubscribeErrorMessage() : SubscribeErrorMessage(nullptr) {}
  ~SubscribeErrorMessage() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SubscribeErrorMessage(
      ::google::protobuf::internal::ConstantInitialized);

  inline SubscribeErrorMessage(const SubscribeErrorMessage& from) : SubscribeErrorMessage(nullptr, from) {}
  inline SubscribeErrorMessage(SubscribeErrorMessage&& from) noexcept
      : SubscribeErrorMessage(nullptr, std::move(from)) {}
  inline SubscribeErrorMessage& operator=(const SubscribeErrorMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline SubscribeErrorMessage& operator=(SubscribeErrorMessage&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SubscribeErrorMessage& default_instance() {
    return *internal_default_instance();
  }
  static inline const SubscribeErrorMessage* internal_default_instance() {
    return reinterpret_cast<const SubscribeErrorMessage*>(
        &_SubscribeErrorMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(SubscribeErrorMessage& a, SubscribeErrorMessage& b) { a.Swap(&b); }
  inline void Swap(SubscribeErrorMessage* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SubscribeErrorMessage* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SubscribeErrorMessage* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SubscribeErrorMessage>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SubscribeErrorMessage& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SubscribeErrorMessage& from) { SubscribeErrorMessage::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SubscribeErrorMessage* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "protobuf_messages.SubscribeErrorMessage"; }

 protected:
  explicit SubscribeErrorMessage(::google::protobuf::Arena* arena);
  SubscribeErrorMessage(::google::protobuf::Arena* arena, const SubscribeErrorMessage& from);
  SubscribeErrorMessage(::google::protobuf::Arena* arena, SubscribeErrorMessage&& from) noexcept
      : SubscribeErrorMessage(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kReasonPhraseFieldNumber = 3,
    kSubscribeIdFieldNumber = 1,
    kErrorCodeFieldNumber = 2,
    kTrackAliasFieldNumber = 4,
  };
  // string ReasonPhrase = 3;
  void clear_reasonphrase() ;
  const std::string& reasonphrase() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_reasonphrase(Arg_&& arg, Args_... args);
  std::string* mutable_reasonphrase();
  PROTOBUF_NODISCARD std::string* release_reasonphrase();
  void set_allocated_reasonphrase(std::string* value);

  private:
  const std::string& _internal_reasonphrase() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_reasonphrase(
      const std::string& value);
  std::string* _internal_mutable_reasonphrase();

  public:
  // uint64 SubscribeId = 1;
  void clear_subscribeid() ;
  ::uint64_t subscribeid() const;
  void set_subscribeid(::uint64_t value);

  private:
  ::uint64_t _internal_subscribeid() const;
  void _internal_set_subscribeid(::uint64_t value);

  public:
  // uint64 ErrorCode = 2;
  void clear_errorcode() ;
  ::uint64_t errorcode() const;
  void set_errorcode(::uint64_t value);

  private:
  ::uint64_t _internal_errorcode() const;
  void _internal_set_errorcode(::uint64_t value);

  public:
  // uint64 TrackAlias = 4;
  void clear_trackalias() ;
  ::uint64_t trackalias() const;
  void set_trackalias(::uint64_t value);

  private:
  ::uint64_t _internal_trackalias() const;
  void _internal_set_trackalias(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:protobuf_messages.SubscribeErrorMessage)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      60, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SubscribeErrorMessage_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SubscribeErrorMessage& from_msg);
    ::google::protobuf::internal::ArenaStringPtr reasonphrase_;
    ::uint64_t subscribeid_;
    ::uint64_t errorcode_;
    ::uint64_t trackalias_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_subscribe_5fmessages_2eproto;
};
// -------------------------------------------------------------------

class SubscribeDoneMessage final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:protobuf_messages.SubscribeDoneMessage) */ {
 public:
  inline SubscribeDoneMessage() : SubscribeDoneMessage(nullptr) {}
  ~SubscribeDoneMessage() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SubscribeDoneMessage(
      ::google::protobuf::internal::ConstantInitialized);

  inline SubscribeDoneMessage(const SubscribeDoneMessage& from) : SubscribeDoneMessage(nullptr, from) {}
  inline SubscribeDoneMessage(SubscribeDoneMessage&& from) noexcept
      : SubscribeDoneMessage(nullptr, std::move(from)) {}
  inline SubscribeDoneMessage& operator=(const SubscribeDoneMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline SubscribeDoneMessage& operator=(SubscribeDoneMessage&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SubscribeDoneMessage& default_instance() {
    return *internal_default_instance();
  }
  static inline const SubscribeDoneMessage* internal_default_instance() {
    return reinterpret_cast<const SubscribeDoneMessage*>(
        &_SubscribeDoneMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(SubscribeDoneMessage& a, SubscribeDoneMessage& b) { a.Swap(&b); }
  inline void Swap(SubscribeDoneMessage* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SubscribeDoneMessage* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SubscribeDoneMessage* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SubscribeDoneMessage>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SubscribeDoneMessage& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SubscribeDoneMessage& from) { SubscribeDoneMessage::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SubscribeDoneMessage* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "protobuf_messages.SubscribeDoneMessage"; }

 protected:
  explicit SubscribeDoneMessage(::google::protobuf::Arena* arena);
  SubscribeDoneMessage(::google::protobuf::Arena* arena, const SubscribeDoneMessage& from);
  SubscribeDoneMessage(::google::protobuf::Arena* arena, SubscribeDoneMessage&& from) noexcept
      : SubscribeDoneMessage(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kReasonPhraseFieldNumber = 3,
    kSubscribeIdFieldNumber = 1,
    kStatusCodeFieldNumber = 2,
    kFinalGroupFieldNumber = 5,
    kFinalObjectFieldNumber = 6,
    kContentExistsFieldNumber = 4,
  };
  // string ReasonPhrase = 3;
  void clear_reasonphrase() ;
  const std::string& reasonphrase() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_reasonphrase(Arg_&& arg, Args_... args);
  std::string* mutable_reasonphrase();
  PROTOBUF_NODISCARD std::string* release_reasonphrase();
  void set_allocated_reasonphrase(std::string* value);

  private:
  const std::string& _internal_reasonphrase() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_reasonphrase(
      const std::string& value);
  std::string* _internal_mutable_reasonphrase();

  public:
  // uint64 SubscribeId = 1;
  void clear_subscribeid() ;
  ::uint64_t subscribeid() const;
  void set_subscribeid(::uint64_t value);

  private:
  ::uint64_t _internal_subscribeid() const;
  void _internal_set_subscribeid(::uint64_t value);

  public:
  // uint64 StatusCode = 2;
  void clear_statuscode() ;
  ::uint64_t statuscode() const;
  void set_statuscode(::uint64_t value);

  private:
  ::uint64_t _internal_statuscode() const;
  void _internal_set_statuscode(::uint64_t value);

  public:
  // optional uint64 FinalGroup = 5;
  bool has_finalgroup() const;
  void clear_finalgroup() ;
  ::uint64_t finalgroup() const;
  void set_finalgroup(::uint64_t value);

  private:
  ::uint64_t _internal_finalgroup() const;
  void _internal_set_finalgroup(::uint64_t value);

  public:
  // optional uint64 FinalObject = 6;
  bool has_finalobject() const;
  void clear_finalobject() ;
  ::uint64_t finalobject() const;
  void set_finalobject(::uint64_t value);

  private:
  ::uint64_t _internal_finalobject() const;
  void _internal_set_finalobject(::uint64_t value);

  public:
  // bool ContentExists = 4;
  void clear_contentexists() ;
  bool contentexists() const;
  void set_contentexists(bool value);

  private:
  bool _internal_contentexists() const;
  void _internal_set_contentexists(bool value);

  public:
  // @@protoc_insertion_point(class_scope:protobuf_messages.SubscribeDoneMessage)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 0,
      59, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SubscribeDoneMessage_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SubscribeDoneMessage& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr reasonphrase_;
    ::uint64_t subscribeid_;
    ::uint64_t statuscode_;
    ::uint64_t finalgroup_;
    ::uint64_t finalobject_;
    bool contentexists_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_subscribe_5fmessages_2eproto;
};
// -------------------------------------------------------------------

class SubscribeUpdateMessage final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:protobuf_messages.SubscribeUpdateMessage) */ {
 public:
  inline SubscribeUpdateMessage() : SubscribeUpdateMessage(nullptr) {}
  ~SubscribeUpdateMessage() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SubscribeUpdateMessage(
      ::google::protobuf::internal::ConstantInitialized);

  inline SubscribeUpdateMessage(const SubscribeUpdateMessage& from) : SubscribeUpdateMessage(nullptr, from) {}
  inline SubscribeUpdateMessage(SubscribeUpdateMessage&& from) noexcept
      : SubscribeUpdateMessage(nullptr, std::move(from)) {}
  inline SubscribeUpdateMessage& operator=(const SubscribeUpdateMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline SubscribeUpdateMessage& operator=(SubscribeUpdateMessage&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SubscribeUpdateMessage& default_instance() {
    return *internal_default_instance();
  }
  static inline const SubscribeUpdateMessage* internal_default_instance() {
    return reinterpret_cast<const SubscribeUpdateMessage*>(
        &_SubscribeUpdateMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(SubscribeUpdateMessage& a, SubscribeUpdateMessage& b) { a.Swap(&b); }
  inline void Swap(SubscribeUpdateMessage* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SubscribeUpdateMessage* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SubscribeUpdateMessage* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SubscribeUpdateMessage>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SubscribeUpdateMessage& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SubscribeUpdateMessage& from) { SubscribeUpdateMessage::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SubscribeUpdateMessage* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "protobuf_messages.SubscribeUpdateMessage"; }

 protected:
  explicit SubscribeUpdateMessage(::google::protobuf::Arena* arena);
  SubscribeUpdateMessage(::google::protobuf::Arena* arena, const SubscribeUpdateMessage& from);
  SubscribeUpdateMessage(::google::protobuf::Arena* arena, SubscribeUpdateMessage&& from) noexcept
      : SubscribeUpdateMessage(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kParametersFieldNumber = 8,
    kSubscribeIdFieldNumber = 1,
    kStartGroupFieldNumber = 2,
    kStartObjectFieldNumber = 3,
    kEndGroupFieldNumber = 4,
    kEndObjectFieldNumber = 5,
    kNumParametersFieldNumber = 7,
    kSubscriberPriorityFieldNumber = 6,
  };
  // repeated .protobuf_messages.SubscribeParameter parameters = 8;
  int parameters_size() const;
  private:
  int _internal_parameters_size() const;

  public:
  void clear_parameters() ;
  ::protobuf_messages::SubscribeParameter* mutable_parameters(int index);
  ::google::protobuf::RepeatedPtrField<::protobuf_messages::SubscribeParameter>* mutable_parameters();

  private:
  const ::google::protobuf::RepeatedPtrField<::protobuf_messages::SubscribeParameter>& _internal_parameters() const;
  ::google::protobuf::RepeatedPtrField<::protobuf_messages::SubscribeParameter>* _internal_mutable_parameters();
  public:
  const ::protobuf_messages::SubscribeParameter& parameters(int index) const;
  ::protobuf_messages::SubscribeParameter* add_parameters();
  const ::google::protobuf::RepeatedPtrField<::protobuf_messages::SubscribeParameter>& parameters() const;
  // uint64 SubscribeId = 1;
  void clear_subscribeid() ;
  ::uint64_t subscribeid() const;
  void set_subscribeid(::uint64_t value);

  private:
  ::uint64_t _internal_subscribeid() const;
  void _internal_set_subscribeid(::uint64_t value);

  public:
  // uint64 StartGroup = 2;
  void clear_startgroup() ;
  ::uint64_t startgroup() const;
  void set_startgroup(::uint64_t value);

  private:
  ::uint64_t _internal_startgroup() const;
  void _internal_set_startgroup(::uint64_t value);

  public:
  // uint64 StartObject = 3;
  void clear_startobject() ;
  ::uint64_t startobject() const;
  void set_startobject(::uint64_t value);

  private:
  ::uint64_t _internal_startobject() const;
  void _internal_set_startobject(::uint64_t value);

  public:
  // uint64 EndGroup = 4;
  void clear_endgroup() ;
  ::uint64_t endgroup() const;
  void set_endgroup(::uint64_t value);

  private:
  ::uint64_t _internal_endgroup() const;
  void _internal_set_endgroup(::uint64_t value);

  public:
  // uint64 EndObject = 5;
  void clear_endobject() ;
  ::uint64_t endobject() const;
  void set_endobject(::uint64_t value);

  private:
  ::uint64_t _internal_endobject() const;
  void _internal_set_endobject(::uint64_t value);

  public:
  // uint64 numParameters = 7;
  void clear_numparameters() ;
  ::uint64_t numparameters() const;
  void set_numparameters(::uint64_t value);

  private:
  ::uint64_t _internal_numparameters() const;
  void _internal_set_numparameters(::uint64_t value);

  public:
  // uint32 SubscriberPriority = 6;
  void clear_subscriberpriority() ;
  ::uint32_t subscriberpriority() const;
  void set_subscriberpriority(::uint32_t value);

  private:
  ::uint32_t _internal_subscriberpriority() const;
  void _internal_set_subscriberpriority(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:protobuf_messages.SubscribeUpdateMessage)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 8, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SubscribeUpdateMessage_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SubscribeUpdateMessage& from_msg);
    ::google::protobuf::RepeatedPtrField< ::protobuf_messages::SubscribeParameter > parameters_;
    ::uint64_t subscribeid_;
    ::uint64_t startgroup_;
    ::uint64_t startobject_;
    ::uint64_t endgroup_;
    ::uint64_t endobject_;
    ::uint64_t numparameters_;
    ::uint32_t subscriberpriority_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_subscribe_5fmessages_2eproto;
};
// -------------------------------------------------------------------

class SubscribeMessage final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:protobuf_messages.SubscribeMessage) */ {
 public:
  inline SubscribeMessage() : SubscribeMessage(nullptr) {}
  ~SubscribeMessage() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SubscribeMessage(
      ::google::protobuf::internal::ConstantInitialized);

  inline SubscribeMessage(const SubscribeMessage& from) : SubscribeMessage(nullptr, from) {}
  inline SubscribeMessage(SubscribeMessage&& from) noexcept
      : SubscribeMessage(nullptr, std::move(from)) {}
  inline SubscribeMessage& operator=(const SubscribeMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline SubscribeMessage& operator=(SubscribeMessage&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SubscribeMessage& default_instance() {
    return *internal_default_instance();
  }
  static inline const SubscribeMessage* internal_default_instance() {
    return reinterpret_cast<const SubscribeMessage*>(
        &_SubscribeMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(SubscribeMessage& a, SubscribeMessage& b) { a.Swap(&b); }
  inline void Swap(SubscribeMessage* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SubscribeMessage* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SubscribeMessage* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SubscribeMessage>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SubscribeMessage& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SubscribeMessage& from) { SubscribeMessage::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SubscribeMessage* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "protobuf_messages.SubscribeMessage"; }

 protected:
  explicit SubscribeMessage(::google::protobuf::Arena* arena);
  SubscribeMessage(::google::protobuf::Arena* arena, const SubscribeMessage& from);
  SubscribeMessage(::google::protobuf::Arena* arena, SubscribeMessage&& from) noexcept
      : SubscribeMessage(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kParametersFieldNumber = 13,
    kTrackNamespaceFieldNumber = 3,
    kTrackNameFieldNumber = 4,
    kSubscribeIDFieldNumber = 1,
    kTrackAliasFieldNumber = 2,
    kSubscriberPriorityFieldNumber = 5,
    kGroupOrderFieldNumber = 6,
    kStartGroupFieldNumber = 8,
    kStartObjectFieldNumber = 9,
    kEndGroupFieldNumber = 10,
    kEndObjectFieldNumber = 11,
    kNumParametersFieldNumber = 12,
    kFilterTypeFieldNumber = 7,
  };
  // repeated .protobuf_messages.SubscribeParameter parameters = 13;
  int parameters_size() const;
  private:
  int _internal_parameters_size() const;

  public:
  void clear_parameters() ;
  ::protobuf_messages::SubscribeParameter* mutable_parameters(int index);
  ::google::protobuf::RepeatedPtrField<::protobuf_messages::SubscribeParameter>* mutable_parameters();

  private:
  const ::google::protobuf::RepeatedPtrField<::protobuf_messages::SubscribeParameter>& _internal_parameters() const;
  ::google::protobuf::RepeatedPtrField<::protobuf_messages::SubscribeParameter>* _internal_mutable_parameters();
  public:
  const ::protobuf_messages::SubscribeParameter& parameters(int index) const;
  ::protobuf_messages::SubscribeParameter* add_parameters();
  const ::google::protobuf::RepeatedPtrField<::protobuf_messages::SubscribeParameter>& parameters() const;
  // string TrackNamespace = 3;
  void clear_tracknamespace() ;
  const std::string& tracknamespace() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_tracknamespace(Arg_&& arg, Args_... args);
  std::string* mutable_tracknamespace();
  PROTOBUF_NODISCARD std::string* release_tracknamespace();
  void set_allocated_tracknamespace(std::string* value);

  private:
  const std::string& _internal_tracknamespace() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_tracknamespace(
      const std::string& value);
  std::string* _internal_mutable_tracknamespace();

  public:
  // string TrackName = 4;
  void clear_trackname() ;
  const std::string& trackname() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_trackname(Arg_&& arg, Args_... args);
  std::string* mutable_trackname();
  PROTOBUF_NODISCARD std::string* release_trackname();
  void set_allocated_trackname(std::string* value);

  private:
  const std::string& _internal_trackname() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_trackname(
      const std::string& value);
  std::string* _internal_mutable_trackname();

  public:
  // uint64 SubscribeID = 1;
  void clear_subscribeid() ;
  ::uint64_t subscribeid() const;
  void set_subscribeid(::uint64_t value);

  private:
  ::uint64_t _internal_subscribeid() const;
  void _internal_set_subscribeid(::uint64_t value);

  public:
  // uint64 TrackAlias = 2;
  void clear_trackalias() ;
  ::uint64_t trackalias() const;
  void set_trackalias(::uint64_t value);

  private:
  ::uint64_t _internal_trackalias() const;
  void _internal_set_trackalias(::uint64_t value);

  public:
  // uint32 SubscriberPriority = 5;
  void clear_subscriberpriority() ;
  ::uint32_t subscriberpriority() const;
  void set_subscriberpriority(::uint32_t value);

  private:
  ::uint32_t _internal_subscriberpriority() const;
  void _internal_set_subscriberpriority(::uint32_t value);

  public:
  // uint32 GroupOrder = 6;
  void clear_grouporder() ;
  ::uint32_t grouporder() const;
  void set_grouporder(::uint32_t value);

  private:
  ::uint32_t _internal_grouporder() const;
  void _internal_set_grouporder(::uint32_t value);

  public:
  // optional uint64 StartGroup = 8;
  bool has_startgroup() const;
  void clear_startgroup() ;
  ::uint64_t startgroup() const;
  void set_startgroup(::uint64_t value);

  private:
  ::uint64_t _internal_startgroup() const;
  void _internal_set_startgroup(::uint64_t value);

  public:
  // optional uint64 StartObject = 9;
  bool has_startobject() const;
  void clear_startobject() ;
  ::uint64_t startobject() const;
  void set_startobject(::uint64_t value);

  private:
  ::uint64_t _internal_startobject() const;
  void _internal_set_startobject(::uint64_t value);

  public:
  // optional uint64 EndGroup = 10;
  bool has_endgroup() const;
  void clear_endgroup() ;
  ::uint64_t endgroup() const;
  void set_endgroup(::uint64_t value);

  private:
  ::uint64_t _internal_endgroup() const;
  void _internal_set_endgroup(::uint64_t value);

  public:
  // optional uint64 EndObject = 11;
  bool has_endobject() const;
  void clear_endobject() ;
  ::uint64_t endobject() const;
  void set_endobject(::uint64_t value);

  private:
  ::uint64_t _internal_endobject() const;
  void _internal_set_endobject(::uint64_t value);

  public:
  // uint64 NumParameters = 12;
  void clear_numparameters() ;
  ::uint64_t numparameters() const;
  void set_numparameters(::uint64_t value);

  private:
  ::uint64_t _internal_numparameters() const;
  void _internal_set_numparameters(::uint64_t value);

  public:
  // .protobuf_messages.SubscribeFilter FilterType = 7;
  void clear_filtertype() ;
  ::protobuf_messages::SubscribeFilter filtertype() const;
  void set_filtertype(::protobuf_messages::SubscribeFilter value);

  private:
  ::protobuf_messages::SubscribeFilter _internal_filtertype() const;
  void _internal_set_filtertype(::protobuf_messages::SubscribeFilter value);

  public:
  // @@protoc_insertion_point(class_scope:protobuf_messages.SubscribeMessage)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 13, 1,
      74, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SubscribeMessage_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SubscribeMessage& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::protobuf_messages::SubscribeParameter > parameters_;
    ::google::protobuf::internal::ArenaStringPtr tracknamespace_;
    ::google::protobuf::internal::ArenaStringPtr trackname_;
    ::uint64_t subscribeid_;
    ::uint64_t trackalias_;
    ::uint32_t subscriberpriority_;
    ::uint32_t grouporder_;
    ::uint64_t startgroup_;
    ::uint64_t startobject_;
    ::uint64_t endgroup_;
    ::uint64_t endobject_;
    ::uint64_t numparameters_;
    int filtertype_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_subscribe_5fmessages_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// SubscribeParameter

// -------------------------------------------------------------------

// SubscribeMessage

// uint64 SubscribeID = 1;
inline void SubscribeMessage::clear_subscribeid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.subscribeid_ = ::uint64_t{0u};
}
inline ::uint64_t SubscribeMessage::subscribeid() const {
  // @@protoc_insertion_point(field_get:protobuf_messages.SubscribeMessage.SubscribeID)
  return _internal_subscribeid();
}
inline void SubscribeMessage::set_subscribeid(::uint64_t value) {
  _internal_set_subscribeid(value);
  // @@protoc_insertion_point(field_set:protobuf_messages.SubscribeMessage.SubscribeID)
}
inline ::uint64_t SubscribeMessage::_internal_subscribeid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.subscribeid_;
}
inline void SubscribeMessage::_internal_set_subscribeid(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.subscribeid_ = value;
}

// uint64 TrackAlias = 2;
inline void SubscribeMessage::clear_trackalias() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.trackalias_ = ::uint64_t{0u};
}
inline ::uint64_t SubscribeMessage::trackalias() const {
  // @@protoc_insertion_point(field_get:protobuf_messages.SubscribeMessage.TrackAlias)
  return _internal_trackalias();
}
inline void SubscribeMessage::set_trackalias(::uint64_t value) {
  _internal_set_trackalias(value);
  // @@protoc_insertion_point(field_set:protobuf_messages.SubscribeMessage.TrackAlias)
}
inline ::uint64_t SubscribeMessage::_internal_trackalias() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.trackalias_;
}
inline void SubscribeMessage::_internal_set_trackalias(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.trackalias_ = value;
}

// string TrackNamespace = 3;
inline void SubscribeMessage::clear_tracknamespace() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tracknamespace_.ClearToEmpty();
}
inline const std::string& SubscribeMessage::tracknamespace() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:protobuf_messages.SubscribeMessage.TrackNamespace)
  return _internal_tracknamespace();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SubscribeMessage::set_tracknamespace(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tracknamespace_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:protobuf_messages.SubscribeMessage.TrackNamespace)
}
inline std::string* SubscribeMessage::mutable_tracknamespace() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_tracknamespace();
  // @@protoc_insertion_point(field_mutable:protobuf_messages.SubscribeMessage.TrackNamespace)
  return _s;
}
inline const std::string& SubscribeMessage::_internal_tracknamespace() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.tracknamespace_.Get();
}
inline void SubscribeMessage::_internal_set_tracknamespace(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tracknamespace_.Set(value, GetArena());
}
inline std::string* SubscribeMessage::_internal_mutable_tracknamespace() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.tracknamespace_.Mutable( GetArena());
}
inline std::string* SubscribeMessage::release_tracknamespace() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:protobuf_messages.SubscribeMessage.TrackNamespace)
  return _impl_.tracknamespace_.Release();
}
inline void SubscribeMessage::set_allocated_tracknamespace(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tracknamespace_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.tracknamespace_.IsDefault()) {
          _impl_.tracknamespace_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:protobuf_messages.SubscribeMessage.TrackNamespace)
}

// string TrackName = 4;
inline void SubscribeMessage::clear_trackname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.trackname_.ClearToEmpty();
}
inline const std::string& SubscribeMessage::trackname() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:protobuf_messages.SubscribeMessage.TrackName)
  return _internal_trackname();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SubscribeMessage::set_trackname(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.trackname_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:protobuf_messages.SubscribeMessage.TrackName)
}
inline std::string* SubscribeMessage::mutable_trackname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_trackname();
  // @@protoc_insertion_point(field_mutable:protobuf_messages.SubscribeMessage.TrackName)
  return _s;
}
inline const std::string& SubscribeMessage::_internal_trackname() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.trackname_.Get();
}
inline void SubscribeMessage::_internal_set_trackname(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.trackname_.Set(value, GetArena());
}
inline std::string* SubscribeMessage::_internal_mutable_trackname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.trackname_.Mutable( GetArena());
}
inline std::string* SubscribeMessage::release_trackname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:protobuf_messages.SubscribeMessage.TrackName)
  return _impl_.trackname_.Release();
}
inline void SubscribeMessage::set_allocated_trackname(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.trackname_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.trackname_.IsDefault()) {
          _impl_.trackname_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:protobuf_messages.SubscribeMessage.TrackName)
}

// uint32 SubscriberPriority = 5;
inline void SubscribeMessage::clear_subscriberpriority() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.subscriberpriority_ = 0u;
}
inline ::uint32_t SubscribeMessage::subscriberpriority() const {
  // @@protoc_insertion_point(field_get:protobuf_messages.SubscribeMessage.SubscriberPriority)
  return _internal_subscriberpriority();
}
inline void SubscribeMessage::set_subscriberpriority(::uint32_t value) {
  _internal_set_subscriberpriority(value);
  // @@protoc_insertion_point(field_set:protobuf_messages.SubscribeMessage.SubscriberPriority)
}
inline ::uint32_t SubscribeMessage::_internal_subscriberpriority() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.subscriberpriority_;
}
inline void SubscribeMessage::_internal_set_subscriberpriority(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.subscriberpriority_ = value;
}

// uint32 GroupOrder = 6;
inline void SubscribeMessage::clear_grouporder() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.grouporder_ = 0u;
}
inline ::uint32_t SubscribeMessage::grouporder() const {
  // @@protoc_insertion_point(field_get:protobuf_messages.SubscribeMessage.GroupOrder)
  return _internal_grouporder();
}
inline void SubscribeMessage::set_grouporder(::uint32_t value) {
  _internal_set_grouporder(value);
  // @@protoc_insertion_point(field_set:protobuf_messages.SubscribeMessage.GroupOrder)
}
inline ::uint32_t SubscribeMessage::_internal_grouporder() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.grouporder_;
}
inline void SubscribeMessage::_internal_set_grouporder(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.grouporder_ = value;
}

// .protobuf_messages.SubscribeFilter FilterType = 7;
inline void SubscribeMessage::clear_filtertype() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.filtertype_ = 0;
}
inline ::protobuf_messages::SubscribeFilter SubscribeMessage::filtertype() const {
  // @@protoc_insertion_point(field_get:protobuf_messages.SubscribeMessage.FilterType)
  return _internal_filtertype();
}
inline void SubscribeMessage::set_filtertype(::protobuf_messages::SubscribeFilter value) {
  _internal_set_filtertype(value);
  // @@protoc_insertion_point(field_set:protobuf_messages.SubscribeMessage.FilterType)
}
inline ::protobuf_messages::SubscribeFilter SubscribeMessage::_internal_filtertype() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::protobuf_messages::SubscribeFilter>(_impl_.filtertype_);
}
inline void SubscribeMessage::_internal_set_filtertype(::protobuf_messages::SubscribeFilter value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.filtertype_ = value;
}

// optional uint64 StartGroup = 8;
inline bool SubscribeMessage::has_startgroup() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void SubscribeMessage::clear_startgroup() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.startgroup_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint64_t SubscribeMessage::startgroup() const {
  // @@protoc_insertion_point(field_get:protobuf_messages.SubscribeMessage.StartGroup)
  return _internal_startgroup();
}
inline void SubscribeMessage::set_startgroup(::uint64_t value) {
  _internal_set_startgroup(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:protobuf_messages.SubscribeMessage.StartGroup)
}
inline ::uint64_t SubscribeMessage::_internal_startgroup() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.startgroup_;
}
inline void SubscribeMessage::_internal_set_startgroup(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.startgroup_ = value;
}

// optional uint64 StartObject = 9;
inline bool SubscribeMessage::has_startobject() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void SubscribeMessage::clear_startobject() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.startobject_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint64_t SubscribeMessage::startobject() const {
  // @@protoc_insertion_point(field_get:protobuf_messages.SubscribeMessage.StartObject)
  return _internal_startobject();
}
inline void SubscribeMessage::set_startobject(::uint64_t value) {
  _internal_set_startobject(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:protobuf_messages.SubscribeMessage.StartObject)
}
inline ::uint64_t SubscribeMessage::_internal_startobject() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.startobject_;
}
inline void SubscribeMessage::_internal_set_startobject(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.startobject_ = value;
}

// optional uint64 EndGroup = 10;
inline bool SubscribeMessage::has_endgroup() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void SubscribeMessage::clear_endgroup() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.endgroup_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::uint64_t SubscribeMessage::endgroup() const {
  // @@protoc_insertion_point(field_get:protobuf_messages.SubscribeMessage.EndGroup)
  return _internal_endgroup();
}
inline void SubscribeMessage::set_endgroup(::uint64_t value) {
  _internal_set_endgroup(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:protobuf_messages.SubscribeMessage.EndGroup)
}
inline ::uint64_t SubscribeMessage::_internal_endgroup() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.endgroup_;
}
inline void SubscribeMessage::_internal_set_endgroup(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.endgroup_ = value;
}

// optional uint64 EndObject = 11;
inline bool SubscribeMessage::has_endobject() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void SubscribeMessage::clear_endobject() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.endobject_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::uint64_t SubscribeMessage::endobject() const {
  // @@protoc_insertion_point(field_get:protobuf_messages.SubscribeMessage.EndObject)
  return _internal_endobject();
}
inline void SubscribeMessage::set_endobject(::uint64_t value) {
  _internal_set_endobject(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:protobuf_messages.SubscribeMessage.EndObject)
}
inline ::uint64_t SubscribeMessage::_internal_endobject() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.endobject_;
}
inline void SubscribeMessage::_internal_set_endobject(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.endobject_ = value;
}

// uint64 NumParameters = 12;
inline void SubscribeMessage::clear_numparameters() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.numparameters_ = ::uint64_t{0u};
}
inline ::uint64_t SubscribeMessage::numparameters() const {
  // @@protoc_insertion_point(field_get:protobuf_messages.SubscribeMessage.NumParameters)
  return _internal_numparameters();
}
inline void SubscribeMessage::set_numparameters(::uint64_t value) {
  _internal_set_numparameters(value);
  // @@protoc_insertion_point(field_set:protobuf_messages.SubscribeMessage.NumParameters)
}
inline ::uint64_t SubscribeMessage::_internal_numparameters() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.numparameters_;
}
inline void SubscribeMessage::_internal_set_numparameters(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.numparameters_ = value;
}

// repeated .protobuf_messages.SubscribeParameter parameters = 13;
inline int SubscribeMessage::_internal_parameters_size() const {
  return _internal_parameters().size();
}
inline int SubscribeMessage::parameters_size() const {
  return _internal_parameters_size();
}
inline void SubscribeMessage::clear_parameters() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.parameters_.Clear();
}
inline ::protobuf_messages::SubscribeParameter* SubscribeMessage::mutable_parameters(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:protobuf_messages.SubscribeMessage.parameters)
  return _internal_mutable_parameters()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::protobuf_messages::SubscribeParameter>* SubscribeMessage::mutable_parameters()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:protobuf_messages.SubscribeMessage.parameters)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_parameters();
}
inline const ::protobuf_messages::SubscribeParameter& SubscribeMessage::parameters(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:protobuf_messages.SubscribeMessage.parameters)
  return _internal_parameters().Get(index);
}
inline ::protobuf_messages::SubscribeParameter* SubscribeMessage::add_parameters() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::protobuf_messages::SubscribeParameter* _add = _internal_mutable_parameters()->Add();
  // @@protoc_insertion_point(field_add:protobuf_messages.SubscribeMessage.parameters)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::protobuf_messages::SubscribeParameter>& SubscribeMessage::parameters() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:protobuf_messages.SubscribeMessage.parameters)
  return _internal_parameters();
}
inline const ::google::protobuf::RepeatedPtrField<::protobuf_messages::SubscribeParameter>&
SubscribeMessage::_internal_parameters() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.parameters_;
}
inline ::google::protobuf::RepeatedPtrField<::protobuf_messages::SubscribeParameter>*
SubscribeMessage::_internal_mutable_parameters() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.parameters_;
}

// -------------------------------------------------------------------

// SubscribeUpdateMessage

// uint64 SubscribeId = 1;
inline void SubscribeUpdateMessage::clear_subscribeid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.subscribeid_ = ::uint64_t{0u};
}
inline ::uint64_t SubscribeUpdateMessage::subscribeid() const {
  // @@protoc_insertion_point(field_get:protobuf_messages.SubscribeUpdateMessage.SubscribeId)
  return _internal_subscribeid();
}
inline void SubscribeUpdateMessage::set_subscribeid(::uint64_t value) {
  _internal_set_subscribeid(value);
  // @@protoc_insertion_point(field_set:protobuf_messages.SubscribeUpdateMessage.SubscribeId)
}
inline ::uint64_t SubscribeUpdateMessage::_internal_subscribeid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.subscribeid_;
}
inline void SubscribeUpdateMessage::_internal_set_subscribeid(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.subscribeid_ = value;
}

// uint64 StartGroup = 2;
inline void SubscribeUpdateMessage::clear_startgroup() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.startgroup_ = ::uint64_t{0u};
}
inline ::uint64_t SubscribeUpdateMessage::startgroup() const {
  // @@protoc_insertion_point(field_get:protobuf_messages.SubscribeUpdateMessage.StartGroup)
  return _internal_startgroup();
}
inline void SubscribeUpdateMessage::set_startgroup(::uint64_t value) {
  _internal_set_startgroup(value);
  // @@protoc_insertion_point(field_set:protobuf_messages.SubscribeUpdateMessage.StartGroup)
}
inline ::uint64_t SubscribeUpdateMessage::_internal_startgroup() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.startgroup_;
}
inline void SubscribeUpdateMessage::_internal_set_startgroup(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.startgroup_ = value;
}

// uint64 StartObject = 3;
inline void SubscribeUpdateMessage::clear_startobject() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.startobject_ = ::uint64_t{0u};
}
inline ::uint64_t SubscribeUpdateMessage::startobject() const {
  // @@protoc_insertion_point(field_get:protobuf_messages.SubscribeUpdateMessage.StartObject)
  return _internal_startobject();
}
inline void SubscribeUpdateMessage::set_startobject(::uint64_t value) {
  _internal_set_startobject(value);
  // @@protoc_insertion_point(field_set:protobuf_messages.SubscribeUpdateMessage.StartObject)
}
inline ::uint64_t SubscribeUpdateMessage::_internal_startobject() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.startobject_;
}
inline void SubscribeUpdateMessage::_internal_set_startobject(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.startobject_ = value;
}

// uint64 EndGroup = 4;
inline void SubscribeUpdateMessage::clear_endgroup() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.endgroup_ = ::uint64_t{0u};
}
inline ::uint64_t SubscribeUpdateMessage::endgroup() const {
  // @@protoc_insertion_point(field_get:protobuf_messages.SubscribeUpdateMessage.EndGroup)
  return _internal_endgroup();
}
inline void SubscribeUpdateMessage::set_endgroup(::uint64_t value) {
  _internal_set_endgroup(value);
  // @@protoc_insertion_point(field_set:protobuf_messages.SubscribeUpdateMessage.EndGroup)
}
inline ::uint64_t SubscribeUpdateMessage::_internal_endgroup() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.endgroup_;
}
inline void SubscribeUpdateMessage::_internal_set_endgroup(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.endgroup_ = value;
}

// uint64 EndObject = 5;
inline void SubscribeUpdateMessage::clear_endobject() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.endobject_ = ::uint64_t{0u};
}
inline ::uint64_t SubscribeUpdateMessage::endobject() const {
  // @@protoc_insertion_point(field_get:protobuf_messages.SubscribeUpdateMessage.EndObject)
  return _internal_endobject();
}
inline void SubscribeUpdateMessage::set_endobject(::uint64_t value) {
  _internal_set_endobject(value);
  // @@protoc_insertion_point(field_set:protobuf_messages.SubscribeUpdateMessage.EndObject)
}
inline ::uint64_t SubscribeUpdateMessage::_internal_endobject() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.endobject_;
}
inline void SubscribeUpdateMessage::_internal_set_endobject(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.endobject_ = value;
}

// uint32 SubscriberPriority = 6;
inline void SubscribeUpdateMessage::clear_subscriberpriority() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.subscriberpriority_ = 0u;
}
inline ::uint32_t SubscribeUpdateMessage::subscriberpriority() const {
  // @@protoc_insertion_point(field_get:protobuf_messages.SubscribeUpdateMessage.SubscriberPriority)
  return _internal_subscriberpriority();
}
inline void SubscribeUpdateMessage::set_subscriberpriority(::uint32_t value) {
  _internal_set_subscriberpriority(value);
  // @@protoc_insertion_point(field_set:protobuf_messages.SubscribeUpdateMessage.SubscriberPriority)
}
inline ::uint32_t SubscribeUpdateMessage::_internal_subscriberpriority() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.subscriberpriority_;
}
inline void SubscribeUpdateMessage::_internal_set_subscriberpriority(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.subscriberpriority_ = value;
}

// uint64 numParameters = 7;
inline void SubscribeUpdateMessage::clear_numparameters() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.numparameters_ = ::uint64_t{0u};
}
inline ::uint64_t SubscribeUpdateMessage::numparameters() const {
  // @@protoc_insertion_point(field_get:protobuf_messages.SubscribeUpdateMessage.numParameters)
  return _internal_numparameters();
}
inline void SubscribeUpdateMessage::set_numparameters(::uint64_t value) {
  _internal_set_numparameters(value);
  // @@protoc_insertion_point(field_set:protobuf_messages.SubscribeUpdateMessage.numParameters)
}
inline ::uint64_t SubscribeUpdateMessage::_internal_numparameters() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.numparameters_;
}
inline void SubscribeUpdateMessage::_internal_set_numparameters(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.numparameters_ = value;
}

// repeated .protobuf_messages.SubscribeParameter parameters = 8;
inline int SubscribeUpdateMessage::_internal_parameters_size() const {
  return _internal_parameters().size();
}
inline int SubscribeUpdateMessage::parameters_size() const {
  return _internal_parameters_size();
}
inline void SubscribeUpdateMessage::clear_parameters() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.parameters_.Clear();
}
inline ::protobuf_messages::SubscribeParameter* SubscribeUpdateMessage::mutable_parameters(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:protobuf_messages.SubscribeUpdateMessage.parameters)
  return _internal_mutable_parameters()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::protobuf_messages::SubscribeParameter>* SubscribeUpdateMessage::mutable_parameters()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:protobuf_messages.SubscribeUpdateMessage.parameters)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_parameters();
}
inline const ::protobuf_messages::SubscribeParameter& SubscribeUpdateMessage::parameters(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:protobuf_messages.SubscribeUpdateMessage.parameters)
  return _internal_parameters().Get(index);
}
inline ::protobuf_messages::SubscribeParameter* SubscribeUpdateMessage::add_parameters() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::protobuf_messages::SubscribeParameter* _add = _internal_mutable_parameters()->Add();
  // @@protoc_insertion_point(field_add:protobuf_messages.SubscribeUpdateMessage.parameters)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::protobuf_messages::SubscribeParameter>& SubscribeUpdateMessage::parameters() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:protobuf_messages.SubscribeUpdateMessage.parameters)
  return _internal_parameters();
}
inline const ::google::protobuf::RepeatedPtrField<::protobuf_messages::SubscribeParameter>&
SubscribeUpdateMessage::_internal_parameters() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.parameters_;
}
inline ::google::protobuf::RepeatedPtrField<::protobuf_messages::SubscribeParameter>*
SubscribeUpdateMessage::_internal_mutable_parameters() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.parameters_;
}

// -------------------------------------------------------------------

// UnSubscribeMessage

// uint64 SubscribeId = 1;
inline void UnSubscribeMessage::clear_subscribeid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.subscribeid_ = ::uint64_t{0u};
}
inline ::uint64_t UnSubscribeMessage::subscribeid() const {
  // @@protoc_insertion_point(field_get:protobuf_messages.UnSubscribeMessage.SubscribeId)
  return _internal_subscribeid();
}
inline void UnSubscribeMessage::set_subscribeid(::uint64_t value) {
  _internal_set_subscribeid(value);
  // @@protoc_insertion_point(field_set:protobuf_messages.UnSubscribeMessage.SubscribeId)
}
inline ::uint64_t UnSubscribeMessage::_internal_subscribeid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.subscribeid_;
}
inline void UnSubscribeMessage::_internal_set_subscribeid(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.subscribeid_ = value;
}

// -------------------------------------------------------------------

// SubscribeOkMessage

// uint64 SubscribeId = 1;
inline void SubscribeOkMessage::clear_subscribeid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.subscribeid_ = ::uint64_t{0u};
}
inline ::uint64_t SubscribeOkMessage::subscribeid() const {
  // @@protoc_insertion_point(field_get:protobuf_messages.SubscribeOkMessage.SubscribeId)
  return _internal_subscribeid();
}
inline void SubscribeOkMessage::set_subscribeid(::uint64_t value) {
  _internal_set_subscribeid(value);
  // @@protoc_insertion_point(field_set:protobuf_messages.SubscribeOkMessage.SubscribeId)
}
inline ::uint64_t SubscribeOkMessage::_internal_subscribeid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.subscribeid_;
}
inline void SubscribeOkMessage::_internal_set_subscribeid(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.subscribeid_ = value;
}

// uint64 Expires = 2;
inline void SubscribeOkMessage::clear_expires() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.expires_ = ::uint64_t{0u};
}
inline ::uint64_t SubscribeOkMessage::expires() const {
  // @@protoc_insertion_point(field_get:protobuf_messages.SubscribeOkMessage.Expires)
  return _internal_expires();
}
inline void SubscribeOkMessage::set_expires(::uint64_t value) {
  _internal_set_expires(value);
  // @@protoc_insertion_point(field_set:protobuf_messages.SubscribeOkMessage.Expires)
}
inline ::uint64_t SubscribeOkMessage::_internal_expires() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.expires_;
}
inline void SubscribeOkMessage::_internal_set_expires(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.expires_ = value;
}

// uint32 GroupOrder = 3;
inline void SubscribeOkMessage::clear_grouporder() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.grouporder_ = 0u;
}
inline ::uint32_t SubscribeOkMessage::grouporder() const {
  // @@protoc_insertion_point(field_get:protobuf_messages.SubscribeOkMessage.GroupOrder)
  return _internal_grouporder();
}
inline void SubscribeOkMessage::set_grouporder(::uint32_t value) {
  _internal_set_grouporder(value);
  // @@protoc_insertion_point(field_set:protobuf_messages.SubscribeOkMessage.GroupOrder)
}
inline ::uint32_t SubscribeOkMessage::_internal_grouporder() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.grouporder_;
}
inline void SubscribeOkMessage::_internal_set_grouporder(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.grouporder_ = value;
}

// bool ContentExists = 4;
inline void SubscribeOkMessage::clear_contentexists() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contentexists_ = false;
}
inline bool SubscribeOkMessage::contentexists() const {
  // @@protoc_insertion_point(field_get:protobuf_messages.SubscribeOkMessage.ContentExists)
  return _internal_contentexists();
}
inline void SubscribeOkMessage::set_contentexists(bool value) {
  _internal_set_contentexists(value);
  // @@protoc_insertion_point(field_set:protobuf_messages.SubscribeOkMessage.ContentExists)
}
inline bool SubscribeOkMessage::_internal_contentexists() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.contentexists_;
}
inline void SubscribeOkMessage::_internal_set_contentexists(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contentexists_ = value;
}

// optional uint64 LargestGroupId = 5;
inline bool SubscribeOkMessage::has_largestgroupid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void SubscribeOkMessage::clear_largestgroupid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.largestgroupid_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint64_t SubscribeOkMessage::largestgroupid() const {
  // @@protoc_insertion_point(field_get:protobuf_messages.SubscribeOkMessage.LargestGroupId)
  return _internal_largestgroupid();
}
inline void SubscribeOkMessage::set_largestgroupid(::uint64_t value) {
  _internal_set_largestgroupid(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:protobuf_messages.SubscribeOkMessage.LargestGroupId)
}
inline ::uint64_t SubscribeOkMessage::_internal_largestgroupid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.largestgroupid_;
}
inline void SubscribeOkMessage::_internal_set_largestgroupid(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.largestgroupid_ = value;
}

// optional uint64 LargestObjectId = 6;
inline bool SubscribeOkMessage::has_largestobjectid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void SubscribeOkMessage::clear_largestobjectid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.largestobjectid_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint64_t SubscribeOkMessage::largestobjectid() const {
  // @@protoc_insertion_point(field_get:protobuf_messages.SubscribeOkMessage.LargestObjectId)
  return _internal_largestobjectid();
}
inline void SubscribeOkMessage::set_largestobjectid(::uint64_t value) {
  _internal_set_largestobjectid(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:protobuf_messages.SubscribeOkMessage.LargestObjectId)
}
inline ::uint64_t SubscribeOkMessage::_internal_largestobjectid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.largestobjectid_;
}
inline void SubscribeOkMessage::_internal_set_largestobjectid(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.largestobjectid_ = value;
}

// -------------------------------------------------------------------

// SubscribeErrorMessage

// uint64 SubscribeId = 1;
inline void SubscribeErrorMessage::clear_subscribeid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.subscribeid_ = ::uint64_t{0u};
}
inline ::uint64_t SubscribeErrorMessage::subscribeid() const {
  // @@protoc_insertion_point(field_get:protobuf_messages.SubscribeErrorMessage.SubscribeId)
  return _internal_subscribeid();
}
inline void SubscribeErrorMessage::set_subscribeid(::uint64_t value) {
  _internal_set_subscribeid(value);
  // @@protoc_insertion_point(field_set:protobuf_messages.SubscribeErrorMessage.SubscribeId)
}
inline ::uint64_t SubscribeErrorMessage::_internal_subscribeid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.subscribeid_;
}
inline void SubscribeErrorMessage::_internal_set_subscribeid(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.subscribeid_ = value;
}

// uint64 ErrorCode = 2;
inline void SubscribeErrorMessage::clear_errorcode() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.errorcode_ = ::uint64_t{0u};
}
inline ::uint64_t SubscribeErrorMessage::errorcode() const {
  // @@protoc_insertion_point(field_get:protobuf_messages.SubscribeErrorMessage.ErrorCode)
  return _internal_errorcode();
}
inline void SubscribeErrorMessage::set_errorcode(::uint64_t value) {
  _internal_set_errorcode(value);
  // @@protoc_insertion_point(field_set:protobuf_messages.SubscribeErrorMessage.ErrorCode)
}
inline ::uint64_t SubscribeErrorMessage::_internal_errorcode() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.errorcode_;
}
inline void SubscribeErrorMessage::_internal_set_errorcode(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.errorcode_ = value;
}

// string ReasonPhrase = 3;
inline void SubscribeErrorMessage::clear_reasonphrase() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reasonphrase_.ClearToEmpty();
}
inline const std::string& SubscribeErrorMessage::reasonphrase() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:protobuf_messages.SubscribeErrorMessage.ReasonPhrase)
  return _internal_reasonphrase();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SubscribeErrorMessage::set_reasonphrase(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reasonphrase_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:protobuf_messages.SubscribeErrorMessage.ReasonPhrase)
}
inline std::string* SubscribeErrorMessage::mutable_reasonphrase() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_reasonphrase();
  // @@protoc_insertion_point(field_mutable:protobuf_messages.SubscribeErrorMessage.ReasonPhrase)
  return _s;
}
inline const std::string& SubscribeErrorMessage::_internal_reasonphrase() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.reasonphrase_.Get();
}
inline void SubscribeErrorMessage::_internal_set_reasonphrase(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reasonphrase_.Set(value, GetArena());
}
inline std::string* SubscribeErrorMessage::_internal_mutable_reasonphrase() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.reasonphrase_.Mutable( GetArena());
}
inline std::string* SubscribeErrorMessage::release_reasonphrase() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:protobuf_messages.SubscribeErrorMessage.ReasonPhrase)
  return _impl_.reasonphrase_.Release();
}
inline void SubscribeErrorMessage::set_allocated_reasonphrase(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reasonphrase_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.reasonphrase_.IsDefault()) {
          _impl_.reasonphrase_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:protobuf_messages.SubscribeErrorMessage.ReasonPhrase)
}

// uint64 TrackAlias = 4;
inline void SubscribeErrorMessage::clear_trackalias() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.trackalias_ = ::uint64_t{0u};
}
inline ::uint64_t SubscribeErrorMessage::trackalias() const {
  // @@protoc_insertion_point(field_get:protobuf_messages.SubscribeErrorMessage.TrackAlias)
  return _internal_trackalias();
}
inline void SubscribeErrorMessage::set_trackalias(::uint64_t value) {
  _internal_set_trackalias(value);
  // @@protoc_insertion_point(field_set:protobuf_messages.SubscribeErrorMessage.TrackAlias)
}
inline ::uint64_t SubscribeErrorMessage::_internal_trackalias() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.trackalias_;
}
inline void SubscribeErrorMessage::_internal_set_trackalias(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.trackalias_ = value;
}

// -------------------------------------------------------------------

// SubscribeDoneMessage

// uint64 SubscribeId = 1;
inline void SubscribeDoneMessage::clear_subscribeid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.subscribeid_ = ::uint64_t{0u};
}
inline ::uint64_t SubscribeDoneMessage::subscribeid() const {
  // @@protoc_insertion_point(field_get:protobuf_messages.SubscribeDoneMessage.SubscribeId)
  return _internal_subscribeid();
}
inline void SubscribeDoneMessage::set_subscribeid(::uint64_t value) {
  _internal_set_subscribeid(value);
  // @@protoc_insertion_point(field_set:protobuf_messages.SubscribeDoneMessage.SubscribeId)
}
inline ::uint64_t SubscribeDoneMessage::_internal_subscribeid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.subscribeid_;
}
inline void SubscribeDoneMessage::_internal_set_subscribeid(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.subscribeid_ = value;
}

// uint64 StatusCode = 2;
inline void SubscribeDoneMessage::clear_statuscode() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.statuscode_ = ::uint64_t{0u};
}
inline ::uint64_t SubscribeDoneMessage::statuscode() const {
  // @@protoc_insertion_point(field_get:protobuf_messages.SubscribeDoneMessage.StatusCode)
  return _internal_statuscode();
}
inline void SubscribeDoneMessage::set_statuscode(::uint64_t value) {
  _internal_set_statuscode(value);
  // @@protoc_insertion_point(field_set:protobuf_messages.SubscribeDoneMessage.StatusCode)
}
inline ::uint64_t SubscribeDoneMessage::_internal_statuscode() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.statuscode_;
}
inline void SubscribeDoneMessage::_internal_set_statuscode(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.statuscode_ = value;
}

// string ReasonPhrase = 3;
inline void SubscribeDoneMessage::clear_reasonphrase() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reasonphrase_.ClearToEmpty();
}
inline const std::string& SubscribeDoneMessage::reasonphrase() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:protobuf_messages.SubscribeDoneMessage.ReasonPhrase)
  return _internal_reasonphrase();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SubscribeDoneMessage::set_reasonphrase(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reasonphrase_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:protobuf_messages.SubscribeDoneMessage.ReasonPhrase)
}
inline std::string* SubscribeDoneMessage::mutable_reasonphrase() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_reasonphrase();
  // @@protoc_insertion_point(field_mutable:protobuf_messages.SubscribeDoneMessage.ReasonPhrase)
  return _s;
}
inline const std::string& SubscribeDoneMessage::_internal_reasonphrase() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.reasonphrase_.Get();
}
inline void SubscribeDoneMessage::_internal_set_reasonphrase(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reasonphrase_.Set(value, GetArena());
}
inline std::string* SubscribeDoneMessage::_internal_mutable_reasonphrase() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.reasonphrase_.Mutable( GetArena());
}
inline std::string* SubscribeDoneMessage::release_reasonphrase() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:protobuf_messages.SubscribeDoneMessage.ReasonPhrase)
  return _impl_.reasonphrase_.Release();
}
inline void SubscribeDoneMessage::set_allocated_reasonphrase(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reasonphrase_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.reasonphrase_.IsDefault()) {
          _impl_.reasonphrase_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:protobuf_messages.SubscribeDoneMessage.ReasonPhrase)
}

// bool ContentExists = 4;
inline void SubscribeDoneMessage::clear_contentexists() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contentexists_ = false;
}
inline bool SubscribeDoneMessage::contentexists() const {
  // @@protoc_insertion_point(field_get:protobuf_messages.SubscribeDoneMessage.ContentExists)
  return _internal_contentexists();
}
inline void SubscribeDoneMessage::set_contentexists(bool value) {
  _internal_set_contentexists(value);
  // @@protoc_insertion_point(field_set:protobuf_messages.SubscribeDoneMessage.ContentExists)
}
inline bool SubscribeDoneMessage::_internal_contentexists() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.contentexists_;
}
inline void SubscribeDoneMessage::_internal_set_contentexists(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contentexists_ = value;
}

// optional uint64 FinalGroup = 5;
inline bool SubscribeDoneMessage::has_finalgroup() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void SubscribeDoneMessage::clear_finalgroup() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.finalgroup_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint64_t SubscribeDoneMessage::finalgroup() const {
  // @@protoc_insertion_point(field_get:protobuf_messages.SubscribeDoneMessage.FinalGroup)
  return _internal_finalgroup();
}
inline void SubscribeDoneMessage::set_finalgroup(::uint64_t value) {
  _internal_set_finalgroup(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:protobuf_messages.SubscribeDoneMessage.FinalGroup)
}
inline ::uint64_t SubscribeDoneMessage::_internal_finalgroup() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.finalgroup_;
}
inline void SubscribeDoneMessage::_internal_set_finalgroup(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.finalgroup_ = value;
}

// optional uint64 FinalObject = 6;
inline bool SubscribeDoneMessage::has_finalobject() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void SubscribeDoneMessage::clear_finalobject() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.finalobject_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint64_t SubscribeDoneMessage::finalobject() const {
  // @@protoc_insertion_point(field_get:protobuf_messages.SubscribeDoneMessage.FinalObject)
  return _internal_finalobject();
}
inline void SubscribeDoneMessage::set_finalobject(::uint64_t value) {
  _internal_set_finalobject(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:protobuf_messages.SubscribeDoneMessage.FinalObject)
}
inline ::uint64_t SubscribeDoneMessage::_internal_finalobject() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.finalobject_;
}
inline void SubscribeDoneMessage::_internal_set_finalobject(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.finalobject_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace protobuf_messages


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::protobuf_messages::SubscribeFilter> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::protobuf_messages::SubscribeFilter>() {
  return ::protobuf_messages::SubscribeFilter_descriptor();
}
template <>
struct is_proto_enum<::protobuf_messages::ObjectStatus> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::protobuf_messages::ObjectStatus>() {
  return ::protobuf_messages::ObjectStatus_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_subscribe_5fmessages_2eproto_2epb_2eh
